name: Pull Tests

# Trigger the workflow on every pull request and on pushes to main
on:
  workflow_dispatch:  # Allow manual triggering of the workflow
  pull_request:
    branches:
      - main  # Run tests on pull requests to main
  push:
    branches:
      - main  # Run tests and deploy on merges to main

permissions:
  security-events: write # Required for uploading SARIF files to GitHub Code Scanning
  packages: write  # Required for pushing Docker images to GitHub Container Registry

jobs:
  test:
    runs-on: ubuntu-latest  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.4'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage report
      run: |
        pytest -n auto --cov=note_api --cov-report=xml  

    - name: Upload coverage file to codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        verbose: true

  snyk-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Specify Python version
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.4'
    - name: Snyk analysis
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk.sarif
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif

  build-and-push-container:
    runs-on: ubuntu-latest
    needs:
      - test  # Ensure this runs after the test job is completed
      - snyk-analysis  # Ensure this runs after the Snyk analysis is completed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set lowercase envs
      run: |
        echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "REPO_NAME=$(echo ${GITHUB_REPOSITORY#*/} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA") " >> $GITHUB_ENV
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "TAG=pre-merge-${{ env.COMMIT_HASH }}" >> $GITHUB_ENV
        else
          echo "TAG=${{ env.COMMIT_HASH }}" >> $GITHUB_ENV
        fi

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ env.TAG }} .

    - name: Push Docker image
      run: docker push ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ env.TAG }}
